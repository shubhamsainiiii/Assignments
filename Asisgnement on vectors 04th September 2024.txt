Create a vector of integers with 10 elements, all initialized to 0.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr(10, 0);
    for (auto it : arr)
    {
        cout << it << " ";
    }
    cout << "\n";
    return 0;
}
======================================================================================
Create a vector of strings with 5 elements, each initialized to "empty.".

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<string> arr(5, "Empty");
    for (auto it : arr)
    {
        cout << it << " ";
    }
    cout << "\n";
    return 0;
}
======================================================================================
Initialize a vector with the values {1, 2, 3, 4, 5}.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr={1,2,3,4,5};
    for (auto it : arr)
    {
        cout << it << " ";
    }
    cout << "\n";
    return 0;
}
======================================================================================
Create a vector of floating-point numbers and fill it with 10 values entered by the user.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<float> arr{};
    int n;
    cout<<"Enter the values : ";
    for(int i=0;i<10;i++)
    {
        cin>>n;
        arr.push_back(n);
    }
    for (auto it : arr)
    {
        cout << it << " ";
    }
    cout << "\n";
    return 0;
}
======================================================================================
Print all elements of a vector of integers.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr{1,2,3,4,5,6,7,8,9,0};
    for (auto it : arr)
    {
        cout << it << " ";
    }
    cout << "\n";
    return 0;
}
======================================================================================
Find the size of a vector of doubles and display it.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<double> arr={111.222,2222.333,333.444,44.555,5555.666666,6777.77777,7555.444};
    int size=arr.size();
    cout<<"Size of given vector is : "<<size;
    return 0;
}
======================================================================================
Check if a vector of integers is empty and print the result.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<double> arr={111.222,2222.333,333.444,44.555,5555.666666,6777.77777,7555.444};
    int empty=arr.empty();
    if(!empty)
    {
        cout<<"Yes\n";
    }
    else{
        cout<<"No";
    }
    return 0;
}
======================================================================================
Add an element to the end of a vector of strings and print the updated vector.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<string> arr={"shubham","shubham","shubham","shubham","shubham","shubham","shubham","shubham"};
    arr.push_back("hello shubham !");
    for(auto it : arr)
    {
        cout<<it<<" ";
    }
    return 0;
}
======================================================================================
Remove the last element from a vector of integers and print the vector.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<string> arr={"shubham","this","shubham","this","shubham","this","shubham","who"};
    arr.pop_back();
    for(auto it : arr)
    {
        cout<<it<<" ";
    }
    return 0;
}
======================================================================================
Clear all elements from a vector of characters and check if it is empty.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<char> arr={'a','d','i','e','u','g','c','a'};
    arr.clear();
    int empty=arr.empty();
    if(empty){cout<<"Yes";}
    else{cout<<"No";}
   
    return 0;
}
======================================================================================
Create a vector and use push_back to add 5 elements to it. Then, use pop_back to remove 2 elements.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr = {1, 2, 3, 4, 5};
    cout << "Original vector : ";
    for (auto it : arr)
    {
        cout << it << " ";
    }
    cout<<"\n";
    int n;
    cout << "Enter the number : ";
    for (int i = 0; i < 5; i++)
    {
        cin >> n;
        arr.push_back(n);
    }
    cout << "vector after adding 5 elements : ";
    for (auto it : arr)
    {
        cout << it << " ";
    }
    cout << "\n";
    for (int i = 0; i < 2; i++)
    {
        arr.pop_back();
    }
    cout << "vector after removing 2 elements : ";
    for (auto it : arr)
    {
        cout << it << " ";
    }
    return 0;
}
======================================================================================
Copy all elements from one vector of floats to another vector.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr1 = {1, 2, 3, 4, 5};
    vector<int>arr2{};
    for(int i=0;i<arr1.size();i++)
    {
        arr2.push_back(arr1[i]);
    }
    cout<<"result after copy all elements of arr1 : ";

    for(auto it: arr2)
    {
        cout<<it<<" ";
    }
    cout<<"\n";
    return 0;
}
======================================================================================
Access and print the third element of a vector of strings.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<string> arr = {"Shubham","Hello","CPP","Regex","mern"};
    cout<<arr[3];

    return 0;
}
======================================================================================
Modify the value of the fifth element in a vector of integers.

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr = {1,2,3,4,5,6,7,8,9};
    arr[5]=66;
    cout<<"Updated vector is : ";
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
    return 0;
}
======================================================================================
Use the at method to safely access the 7th element of a vector of doubles.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<double> arr = {1.222, 22.333, 3.33, 2.444, 5.777, 7.000, 0.777, 5.444, 94.111};
    cout << "7th Element of given vector is : " << arr.at(7);
    return 0;
}
======================================================================================
Use a loop to iterate over and print all elements of a vector of integers.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr = {1, 2, 3, 4, 5};
    for(int i=0;i<arr.size();i++)
    {
        cout<<arr[i]<<" ";
    }

    return 0;
}
======================================================================================
Use the assign function to set a vector of integers to 10 elements, all initialized to 7.
#include <bits/stdc++.h>
using namespace std;
void arrr(vector<int> &arr)
{
    for (auto it : arr)
    {
        cout << it << " ";
    }
}

int main()
{
    vector<int> arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    arr.assign(10, 7);
    arrr(arr);
    return 0;
}
======================================================================================
ind the capacity of a vector of integers and print it.
#include <bits/stdc++.h>
using namespace std;
int main()
{
    vector<int> arr = {1, 2, 3, 4, 5};
    cout<<"Capacity of given vector : "<<arr.capacity();
    
    return 0;
}
======================================================================================
Determine if the vector is at its maximum size using max_size().
#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> arr = {1,2};
    int max = arr.max_size();
    cout << "The maximum size of vector is : " << max;
    return 0;
}
======================================================================================
Check if a vector contains a specific value using the find function.
#include <bits/stdc++.h>
using namespace std;
int main()
{
    vector<int> arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};
    int num = 4;
    auto findNum=find(arr.begin(),arr.end(),num);
    if(findNum!=arr.end()){cout<<"The number found in the vector. on index number : "<<distance(arr.begin(),findNum);}
    else{cout<<"The number not found in the vector.\n";}
    
    return 0;
}
======================================================================================
Check if a vectorâ€™s size is equal to a specific number and print a message.
#include <bits/stdc++.h>
using namespace std;
int main()
{
    vector<int> arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};
    int size=arr.size();
    if(size>0){cout<<"Valid";}
    else{cout<<"Invalid";}
    return 0;
}
======================================================================================
Resize a vector of doubles to hold 15 elements and initialize them with 0.0.

#include <bits/stdc++.h>
using namespace std;
void arrr(vector<double> &arr)
{
    for (auto it : arr)
    {
        cout << it << " ";
    }
}

int main()
{
    vector<double> arr = {1.222, 2.3333, 3.4444, 4.55555};
    cout<<arr.size()<<"\n";
    arr.resize(15,0.00);
    arrr(arr);
    return 0;
}
======================================================================================
Initialize a vector of integers with values from 10 to 19.
#include <bits/stdc++.h>
using namespace std;
void arrr(vector<int> &arr)
{
    for (auto it : arr)
    {
        cout << it << " ";
    }
}

int main()
{
    vector<int> arr = {10,11,12,13,14,15,16,17,18,19};
    arrr(arr);
    return 0;
}
======================================================================================
Create a vector of vectors (2D vector) and initialize it with 3 rows and 4 columns of zeros.
#include <bits/stdc++.h>
using namespace std;
void print2darr(vector<vector<int>> &arr)
{
    for (auto vec : arr)
    {
        for (auto it : vec)
        {
            cout << it << " ";
        }
        cout << "\n";
    }
}
int main()
{
    vector<vector<int>> arr = {
        {1, 2, 3, 4},
        {5, 6, 7, 8},
        {9, 10, 11, 12}};
    print2darr(arr);
}
======================================================================================
Shrink the vector to fit its current size and print the new capacity.
#include <bits/stdc++.h>
using namespace std;
void arrr(vector<int>&arr)
{
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
    cout<<"\n";
}
int main()
{
    vector<int> arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};
    cout<<"Capacity of given vector : "<<arr.capacity()<<"\n";
    arr.erase(arr.begin()+3,arr.end());
    arrr(arr);
    arr.shrink_to_fit();
    cout<<"Capacity of new vector is : "<<arr.capacity();
    return 0;
}
======================================================================================